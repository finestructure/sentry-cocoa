name: Test
on:
  push:
    branches:
      - main
      - release/**
      - ci-bisect

  pull_request:
    paths:
      - 'Sources/**'
      - 'Tests/**'
      - 'test-server/**'
      - 'Samples/**'
      - '.github/workflows/test.yml'
      - 'fastlane/**'
      - 'scripts/tests-with-thread-sanitizer.sh'
      - 'scripts/ci-select-xcode.sh'
      - 'scripts/xcode-test.sh'

      # run the workflow any time an Xcode scheme changes for any tested target
      - 'Sentry.xcodeproj/xcshareddata/xcschemes/Sentry.xcscheme'
      - 'Samples/tvOS-Swift/tvOS-Swift.xcodeproj/xcshareddata/xcschemes/tvOS-Swift.xcscheme'
      - 'Samples/iOS-Swift/iOS-Swift.xcodeproj/xcshareddata/xcschemes/iOS13-Swift.xcscheme'
      - 'Samples/iOS-Swift/iOS-Swift.xcodeproj/xcshareddata/xcschemes/iOS-SwiftUITests.xcscheme'
      - 'Samples/iOS-Swift/iOS-Swift.xcodeproj/xcshareddata/xcschemes/iOS-Swift.xcscheme'
      - 'Samples/macOS-Swift/macOS-Swift.xcodeproj/xcshareddata/xcschemes/macOS-Swift.xcscheme'
      - 'Samples/iOS-ObjectiveC/iOS-ObjectiveC.xcodeproj/xcshareddata/xcschemes/iOS-ObjectiveC.xcscheme'

jobs:
  build-test-server:
    name: Build test server
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
      - name: Cache for Test Server
        id: cache_test_server
        uses: actions/cache@v3
        with:
          path: ./test-server/.build
          key: test-server-${{ hashFiles('./test-server') }}
          restore-keys: |
            test-server-${{ hashFiles('./test-server') }}
            test-server-

      - name: Build Test Server
        if: steps.cache_test_server.outputs.cache-hit != 'true'
        working-directory: test-server
        run: >-
          swift build -c release 2>&1 | tee test-server-build.log

      - name: Copy exec
        working-directory: test-server
        run: cp $(swift build --show-bin-path -c release)/Run test-server-exec

      - name: Archiving DerivedData
        uses: actions/upload-artifact@v3
        with:
          name: test-server
          path: |
            ./test-server/test-server-exec

      - name: Archiving Raw Test Logs
        uses: actions/upload-artifact@v3
        if: ${{  failure() || cancelled() }}
        with:
          name: test-server-build-log-${{matrix.platform}}-xcode-${{matrix.xcode}}-os-${{matrix.test-destination-os}}
          path: |
            raw-test-output.log

  unit-tests:
    name: Unit ${{matrix.platform}} - Xcode ${{matrix.xcode}} - OS ${{matrix.test-destination-os}}
    runs-on: ${{matrix.runs-on}}
    needs: build-test-server

    strategy:
      fail-fast: false
      matrix:
        # Can't run tests on watchOS because XCTest is not available
        # We can't use Xcode 11.7 as we use XCTestObservation. When building with Xcode 11.7
        # we get the error 'XCTest/XCTest.h' not found. Setting ENABLE_TESTING_SEARCH_PATH=YES
        # doesn't work.
        include:
          # iOS 12.4
          - runs-on: macos-11
            platform: 'iOS'
            xcode: '13.2.1'
            test-destination-os: '12.4'

          # iOS 13.7
          - runs-on: macos-11
            platform: 'iOS'
            xcode: '13.2.1'
            test-destination-os: '13.7'

          # iOS 14
          - runs-on: macos-11
            platform: 'iOS'
            xcode: '13.2.1'
            test-destination-os: '14.5'

          # iOS 15
          - runs-on: macos-12
            platform: 'iOS'
            xcode: '13.4.1'
            test-destination-os: 'latest'

          # iOS 16
          - runs-on: macos-12
            platform: 'iOS'
            xcode: '14.2'
            test-destination-os: 'latest'

          # macOS 11
          - runs-on: macos-11
            platform: 'macOS'
            xcode: '13.2.1'
            test-destination-os: 'latest'

          # macOS 12
          - runs-on: macos-12
            platform: 'macOS'
            xcode: '13.4.1'
            test-destination-os: 'latest'

          # Catalyst. We only test the latest version, as
          # the risk something breaking on Catalyst and not
          # on an older iOS or macOS version is low.
          - runs-on: macos-12
            platform: 'Catalyst'
            xcode: '13.4.1'
            test-destination-os: 'latest'

          # MetricKit doesn't exist for tvOS, so we can still run unit tests with
          # Xcode 12 for it.
          # tvOS 14
          - runs-on: macos-11
            platform: 'tvOS'
            xcode: '12.5.1'
            test-destination-os: 'latest'

          # tvOS 15
          - runs-on: macos-12
            platform: 'tvOS'
            xcode: '13.4.1'
            test-destination-os: 'latest'

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v3
        with:
          name: test-server
      - name: Allow test-server to run
        run: chmod +x ./test-server-exec
      - run: ./test-server-exec &

      - run: ./scripts/ci-select-xcode.sh ${{matrix.xcode}}

      # GH action images don't have an iOS 12.4 simulator. Therefore we have to download and install the simulator manually.
      - name: Install iOS 12.4 simulator
        if: ${{ matrix.platform == 'iOS' && matrix.test-destination-os == '12.4'}}
        run: |
          gem install xcode-install
          xcversion simulators --install='iOS 12.4'
          xcrun simctl create custom-test-device "iPhone 8" "com.apple.CoreSimulator.SimRuntime.iOS-12-4"

      # Workaround with a symlink pointed out in: https://github.com/actions/virtual-environments/issues/551#issuecomment-637344435
      - name: Prepare iOS 13.7 simulator
        if: ${{ matrix.platform == 'iOS' && matrix.test-destination-os == '13.7'}}
        run: |
          sudo mkdir -p /Library/Developer/CoreSimulator/Profiles/Runtimes
          sudo ln -s /Applications/Xcode_11.7.app/Contents/Developer/Platforms/iPhoneOS.platform/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS.simruntime /Library/Developer/CoreSimulator/Profiles/Runtimes/iOS\ 13.7.simruntime
          xcrun simctl create custom-test-device "iPhone 8" "com.apple.CoreSimulator.SimRuntime.iOS-13-7"

      # Workaround with a symlink pointed out in: https://github.com/actions/virtual-environments/issues/551#issuecomment-637344435
      - name: Prepare iOS 14.5 simulator
        if: ${{ matrix.platform == 'iOS' && matrix.test-destination-os == '14.5'}}
        run: |
          sudo mkdir -p /Library/Developer/CoreSimulator/Profiles/Runtimes
          sudo ln -s /Applications/Xcode_12.5.1.app/Contents/Developer/Platforms/iPhoneOS.platform/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS.simruntime /Library/Developer/CoreSimulator/Profiles/Runtimes/iOS\ 14.5.simruntime
          xcrun simctl create custom-test-device "iPhone 8" "com.apple.CoreSimulator.SimRuntime.iOS-14-5"
      
      - name: Running tests
        # We call a script with the platform so the destination
        # passed to xcodebuild doesn't end up in the job name,
        # because GitHub Actions don't provide an easy way of
        # manipulating string in expressions.
        run: ./scripts/xcode-test.sh ${{matrix.platform}} ${{matrix.test-destination-os}} $GITHUB_REF_NAME

      - name: Archiving Raw Test Logs
        uses: actions/upload-artifact@v3
        if: ${{  failure() || cancelled() }}
        with:
          name: raw-test-output-${{matrix.platform}}-xcode-${{matrix.xcode}}-os-${{matrix.test-destination-os}}
          path: |
            raw-test-output.log
